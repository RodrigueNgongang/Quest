AWSTemplateFormatVersion: 2010-09-09
Description: ECS Template

Parameters:
  VpcStack:
    Type: String
    Description: Name of VPC stack to build off of
    Default: vpc

Resources:
  #Create ECR repository for docker image
  ECRRepoitory:
    Type: AWS::ECR::Repository

  EcsCluster:
    Type: AWS::ECS::Cluster

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to client host
        VpcId:
          Fn::ImportValue: !Sub ${VpcStack}-vpc-id
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  QuesttRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
              - ecs.amazonaws.com
              - ecs-tasks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonECS_FullAccess


  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
        - !Ref SecurityGroup
      Subnets:
        - Fn::ImportValue: !Sub ${VpcStack}-public-subnet-a-id
        - Fn::ImportValue: !Sub ${VpcStack}-public-subnet-b-id
      Type: application


Outputs:
  EcsClusterExport:
    Description: A reference to the created ECS Cluster
    Value: !Ref EcsCluster
    Export:
      Name: !Sub ${AWS::StackName}-ecs-cluster

  SecurityGroupExport:
    Description: A reference to the created SG
    Value: !Ref SecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-security-group

  QuesttRoleExport:
    Description: A reference to the created IAM Role
    Value: !Ref QuesttRole
    Export:
      Name: !Sub ${AWS::StackName}-quest-role

  ApplicationLoadBalancerArnExport:
    Description: A reference to the created ALB
    Value: !Ref ApplicationLoadBalancer
    Export:
      Name: !Sub ${AWS::StackName}-alb-arn